1. Pseudocode for bubble sort: 
FUNCTION bubbleSort (collection) 

REPEAT
    SET swap to false

FOR i = FIRST INDEX of collection to LAST INDEX of collection - 1
    IF collection[i] > collection[i + 1] THEN
        SET tem to collection[i]
        SET collection[i] = collection[i+1]
        SET collection[i + 1] = tem
        SET swap to true
    END IF
END FOR
UNTIL swap is false

RETURN collection
END FUNCTION

2. Pseudocode for quickSort: 
FUNCTION quicksort (low, high) 
   IF (low < high)
      j = patition(low, high)
      quickSort(low, j)  
      quickSort(j + 1, high)
   END IF

END FUNCTION

FUNCTION patition (low, high)

   SET pivot to array[low]
   SET i to low
   SET j to high

   WHILE i < j
      DO
         INCREMENT i
      WHILE array[i] <= pivot
      END WHILE

      DO
         DECREMENT j
      WHILE array[j] > pivot   

      IF i < j
         SWAP array[i] to array[j]
   END WHILE

   SWAP (array[low], array[high])

END FUNCTION

3.
Merge sort and quick sort are much more efficent than the others because they break collection into sub-collections, which potentially reduce the amount of iteration, performance and memory usage as well.

4.
Bucket sort, or bin sort, is a sorting algorithm distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm.

